 const {updatedData, setUpdatedData} = useContext(SolabContext);
  const [loading, setLoading] = useState(false);
  const [savedData, setSavedData] = useState([]);

  const getFunctionKey = img => {
    for (const [functionName, func] of Object.entries(Images)) {
      if (func() === img) {
        const imageUri = Image.resolveAssetSource(func()).uri;
        console.log('====================================');
        console.log('Function name: ', functionName);
        console.log('Image URI:', imageUri);
        console.log('====================================');
        return {functionName, imageUri};
      }
    }
    console.log('Image function not found');
    return null;
  };

  useEffect(() => {
    const uploadImages = async () => {
      const uploadPromises = data.map(async item => {
        console.log('====================================');
        console.log(item);
        console.log('====================================');
  
        // Use getFunctionKey to retrieve the function name and image URI
        const { functionName, imageUri } = getFunctionKey(item.img);
  
        // Upload the image URI and get the uploaded image URL
        const uploadedImageUrl = await uploadImage(imageUri);
  
        return {
          ...item,
          img: uploadedImageUrl, 
        };
      });
  
      // Wait for all uploads to complete
      const itemsWithImageUrls = await Promise.all(uploadPromises);
      setSavedData(itemsWithImageUrls);
  
      console.log('====================================');
      console.log('saved data rn:', itemsWithImageUrls);
      console.log('====================================');
  
      await saveProductsToDatabase(itemsWithImageUrls);
    };
  
    // uploadImages();
  }, [data]); 
  

  const uploadImage = async imageUri => {
    const data = new FormData();
    data.append('file', {
      uri: imageUri,
      type: 'image/png',
      name: 'my_image.png',
    });
    data.append('upload_preset', 'ml_default');

    try {
      const response = await fetch('https://api.cloudinary.com/v1_1/dzzazhwjk/image/upload',
        {
          method: 'POST',
          body: data,
        },
      );

      const jsonResponse = await response.json();

      if (response.ok) {
        console.log('Uploaded image URL:', jsonResponse.secure_url);
        return jsonResponse.secure_url;
      } else {
        console.error('Upload failed:', jsonResponse.error.message);
      }
    } catch (error) {
      console.error('Upload failed:', error);
    }
  };